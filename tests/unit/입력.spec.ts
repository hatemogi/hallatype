import { 글자꼴, 글자없음 } from '@/글자';
import { 상태코드, 입력모드, 머신상태, 상태전이, 입력머신틀, 위치이동 } from '@/입력';

describe('오토마타', () => {
    const 상태 = 상태코드;
    const 없음 = 글자없음;
    const 위치 = 위치이동;
    const 한글모드 = 입력모드.한글;
    const 영문모드 = 입력모드.영문;
    const 한 = (초성: number, 중성: number, 종성: number) =>  없음.새초성(초성).새중성(중성).새종성(종성);
    const 라틴 = (코드: number) => 없음.라틴(코드);
    const 예상결과 =
        ([시작상태, 모드, 쉬프트, 키]: [머신상태, 입력모드, boolean, string], 결과: [위치이동, 상태코드, 글자꼴[], 글자꼴]) =>
         expect(상태전이(시작상태, [모드, 쉬프트, 키])).toEqual(결과);
    it('상태.S0에서', () => {
        const S0: 머신상태 = [상태.S0, [없음], 없음];
        예상결과([S0, 한글모드, false, 'R'],      [위치.유지, 상태.S10, [없음], 한(1, 0, 0)]);
        예상결과([S0, 한글모드, true,  'R'],      [위치.유지, 상태.S11, [없음], 한(2, 0, 0)]);
        예상결과([S0, 한글모드, false, 'K'],      [위치.유지, 상태.S20, [없음], 한(0, 1, 0)]);
        예상결과([S0, 한글모드, false, 'Backspace'], [위치.이전, 상태.S0,  [없음], 없음]);
        예상결과([S0, 영문모드, false, 'R'],      [위치.다음, 상태.S0,  [라틴(0x72)], 없음]);
    });

    it('상태.S10에서', () => {
        const S10: 머신상태 = [상태.S10, [없음], 한(1, 0, 0)];
        예상결과([S10, 한글모드, false, 'R'],      [위치.유지, 상태.S11, [없음], 한(2, 0, 0)]);
        예상결과([S10, 한글모드, false, 'W'],      [위치.다음, 상태.S10, [한(1, 0, 0)], 한(13, 0, 0)]);
        예상결과([S10, 한글모드, true,  'R'],      [위치.다음, 상태.S11, [한(1, 0, 0)], 한(2, 0, 0)]);
        예상결과([S10, 한글모드, false, 'L'],      [위치.유지, 상태.S20, [없음], 한(1, 21, 0)]);
        예상결과([S10, 한글모드, true,  'O'],      [위치.유지, 상태.S20, [없음], 한(1, 4, 0)]);
        예상결과([S10, 한글모드, false, 'Backspace'], [위치.유지, 상태.S0,  [없음], 없음]);
        예상결과([S10, 영문모드, false, 'R'],      [위치.다음, 상태.S0,  [한(1, 0, 0), 라틴(0x72)], 없음]);
    });

    it('상태.S11에서', () => {
        const S11: 머신상태 = [상태.S11, [없음], 한(2, 0, 0)];
        예상결과([S11, 한글모드, false, 'S'],      [위치.다음, 상태.S10, [한(2, 0, 0)], 한(3, 0, 0)]);
        예상결과([S11, 한글모드, false, 'J'],      [위치.유지, 상태.S20, [없음], 한(2, 5, 0)]);
        예상결과([S11, 한글모드, false, 'Backspace'], [위치.유지, 상태.S10, [없음], 한(1, 0, 0)]);
        예상결과([S11, 영문모드, false, 'R'],      [위치.다음, 상태.S0,  [한(2, 0, 0), 라틴(0x72)], 없음]);
    });

    it('상태.S20에서', () => {
        const S20: 머신상태 = [상태.S20, [없음], 한(1, 5, 0)];
        예상결과([S20, 한글모드, false, 'Backspace'], [위치.유지, 상태.S10, [없음], 한(1, 0, 0)]);
        예상결과([S20, 한글모드, false, 'N'],      [위치.다음, 상태.S20, [한(1, 5, 0)], 한(0, 14, 0)]);
        예상결과([S20, 한글모드, false, 'S'],      [위치.유지, 상태.S30, [없음], 한(1, 5, 4)]);
        예상결과([S20, 영문모드, false, 'R'],      [위치.다음, 상태.S0, [한(1, 5, 0), 라틴(0x72)], 없음]);
        const S202: 머신상태 = [상태.S20, [없음], 한(2, 9, 0)];
        예상결과([S202, 한글모드, false, 'Backspace'], [위치.유지, 상태.S11, [없음], 한(2, 0, 0)]);
        예상결과([S202, 한글모드, false, 'K'], [위치.유지, 상태.S21, [없음], 한(2, 10, 0)]);
        예상결과([S202, 한글모드, false, 'L'], [위치.유지, 상태.S21, [없음], 한(2, 12, 0)]);
        예상결과([S202, 한글모드, false, 'Y'], [위치.다음, 상태.S20, [한(2, 9, 0)], 한(0, 13, 0)]);
    });

    it('상태.S21에서', () => {
        const S21: 머신상태 = [상태.S21, [없음], 한(1, 16, 0)];
        예상결과([S21, 한글모드, false, 'Backspace'], [위치.유지, 상태.S20, [없음], 한(1, 14, 0)]);
        예상결과([S21, 한글모드, false, 'S'],      [위치.유지, 상태.S30, [없음], 한(1, 16, 4)]);
        예상결과([S21, 영문모드, false, 'R'],      [위치.다음, 상태.S0,  [한(1, 16, 0), 라틴(0x72)], 없음]);
    });

    it('상태.S30에서', () => {
        const S30: 머신상태 = [상태.S30, [없음], 한(1, 1, 4)];
        예상결과([S30, 한글모드, false, 'Backspace'], [위치.유지, 상태.S20, [없음], 한(1, 1, 0)]);
        예상결과([S30, 한글모드, false, 'S'],      [위치.다음, 상태.S10, [한(1, 1, 4)], 한(3, 0, 0)]);
        예상결과([S30, 한글모드, false, 'K'],      [위치.다음, 상태.S20, [한(1, 1, 0)], 한(3, 1, 0)]);
        예상결과([S30, 영문모드, false, 'R'],      [위치.다음, 상태.S0,  [한(1, 1, 4), 라틴(0x72)], 없음]);
    });

    it('상태.S31에서', () => {
        const S31: 머신상태 = [상태.S31, [없음], 한(12, 1, 10)]; // 앎
        예상결과([S31, 한글모드, false, 'Backspace'], [위치.유지, 상태.S30, [없음], 한(12, 1, 8)]);
        예상결과([S31, 한글모드, false, 'H'],      [위치.다음, 상태.S20, [한(12, 1, 8)], 한(7, 9, 0)]);
        예상결과([S31, 한글모드, false, 'A'],      [위치.다음, 상태.S10, [한(12, 1, 10)], 한(7, 0, 0)]);
        예상결과([S31, 영문모드, false, 'R'],      [위치.다음, 상태.S0,  [한(12, 1, 10), 라틴(0x72)], 없음]);
    });

    it('입력머신', () => {
        const 머신 = new 입력머신틀();
        expect(머신.입력([한글모드, false, 'R'])).toEqual([위치.유지, [없음], 한(1, 0, 0)]);
        expect(머신.입력([한글모드, false, 'K'])).toEqual([위치.유지, [없음], 한(1, 1, 0)]);
        expect(머신.입력([한글모드, false, 'A'])).toEqual([위치.유지, [없음], 한(1, 1, 16)]);
        expect(머신.입력([한글모드, false, 'E'])).toEqual([위치.다음, [한(1, 1, 16)], 한(4, 0, 0)]);
        expect(머신.입력([영문모드, false, 'R'])).toEqual([위치.다음, [한(4, 0, 0), 라틴(0x72)], 없음]);

    });
});
